spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  cloud:
    nacos:
      config:
        file-extension: yml
        server-addr: 123.60.104.105:8848
      discovery:
        server-addr: 123.60.104.105:8848
        port: ${server.port}
        metadata:
          node-name: ${MY_NODE_NAME}
          node-ip: ${MY_NODE_IP}
          pod-ip: ${MY_POD_IP}
      username: nacos
      password: nacos

  servlet:
    # 配置文件上传大小限制
    multipart:
      max-file-size: 5000MB
      max-request-size: 5000MB

  redis:
    # Redis 连接地址
    host: 123.60.104.105
    # Redis 连接端口
    port: 6379
    # Redis 服务器连接密码
    password: Redis@123!@#
    # Redis 数据库索引
    database: 0
    # 连接超时时间, Unit: 毫秒
    timeout: 60000
    # 集群配置
#    cluster:
#      # 集群所有(主、从)节点地址信息
#      nodes: 123.60.104.105:6379
#      # 重定向的最大次数
#      max-redirects: 3
    # Redis客户端Lettuce配置
    lettuce:
      # 集群配置
#      cluster:
#        refresh:
#          # 使能集群拓扑自适应刷新，默认值：false
#          adaptive: true
#          # 集群拓扑定时刷新周期，Unit：毫秒
#          period: 30000
      # 连接池配置
      pool:
        # 连接时测试连接有效性
        test-on-borrow: true
        # 连接空闲时测试连接的有效性
        pool.test-while-idle: true
        # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-active: 200
        # 连接池中最小空闲连接
        min-idle: 1
        # 连接池中最大空闲连接
        max-idle: 10
        # 最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        max-wait: 6000s
        # 空闲链接检测线程检测周期毫秒（负值表示不检测）(类型为Duration，添加秒)
        time-between-eviction-runs: 60s
      # 关闭超时时间
      shutdown-timeout: 1s

minio:
  endpoint: http://123.60.104.105:9000
  access-key: minioadmin
  secret-key: minioadmin
  bucketName: pandama

management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: env,beans
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        pushgateway:
          #PUSHGATEWAY address
          baseUrl: 123.60.104.105:9091
          # Push cycle
          pushRate: 15s
          #job definition name
          job: ${spring.application.name}
          # Enable push
          enabled: true
          grouping-key:
            group: pandama